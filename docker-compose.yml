services:
  postgres:
    image: postgres:13
    container_name: medusa-postgres
    environment:
      POSTGRES_DB: my_medusa_db
      POSTGRES_USER: piwu
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U medusa" ]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: medusa-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: ../Dockerfile
    container_name: medusa-backend
    ports:
      - "9000:9000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://piwu:password@postgres:5432/my_medusa_db
      REDIS_URL: redis://redis:6379
      MEDUSA_ADMIN_ONBOARDING_TYPE: nextjs
      STORE_CORS: "http://localhost:3000,http://localhost:8000,http://[::]:3000https://docs.medusajs.com"
      ADMIN_CORS: "http://localhost:5173,http://localhost:9000,https://docs.medusajs.com"
      AUTH_CORS: "http://localhost:5173,http://localhost:9000,http://[::]:3000,http://localhost:8000,http://localhost:3000,https://docs.medusajs.com"
      JWT_SECRET: supersecret
      COOKIE_SECRET: supersecret
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - "./backend:/app"
      - "/app/node_modules"
    command: yarn dev

  storefront:
    build:
      context: ./storefront
      dockerfile: ../Dockerfile.storefront
    container_name: medusa-storefront
    ports:
      - "3000:3000"
    environment:
      NUXT_PUBLIC_MEDUSA_BACKEND_URL: http://localhost:9000
    depends_on:
      - backend
    volumes:
      - "./storefront:/app"
      - "/app/node_modules"
    command: npm run dev
